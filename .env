# プロジェクトのrootパス
# unix系ならプロジェクト直下でpwdで確認したものを貼る
APP_ROOT_PATH=/home/blank/docker-env-injection

# デフォルトのデータベースの設定
POSTGRES_DB=myproject # はじめに作るdb(基本的にはプロジェクト名でok)
POSTGRES_USER=postgres # 基本的には変更なし
POSTGRES_PASSWORD=postgres # 基本的には変更なし
POSTGRES_PORT=5432 # 基本的には変更なし

# サーバーのドメイン名+nginxの設定
HOST_DOMAIN=myproject.com # 設定したwebサーバードメイン
API_HOST_DOMAIN=api.myproject.com # 設定したapiサーバードメイン
NGINX_MAX_BODY=100M # 基本的には変更なし
NGINX_PORT=80 # 基本的には変更なし
NGINX_SSL_PORT=443 # 基本的には変更なし

# アプリケーション名(すべてそれぞれ決めたプロジェクト名)
APP_NAME=myproject
API_APP_NAME=myproject-api
WEB_APP_NAME=myproject-web

# コンテナ名(デフォルトネットワークのエイリアス)
# compose.ymlをそのまま使っているなら変更なし
# どちらにせよコンテナ名
API_CONTAINER=api
WEB_CONTAINER=web
BACKEND_SEVER_CONTAINER=backend-server
FRONTEND_SEVER_CONTAINER=frontend-server
PROXY_SERVER_CONTAINER=nginx-proxy
DB_SERVER_CONTAINER=db

# プロキシサーバネットワークのエイリアス
# compose.ymlをそのまま使っているなら変更なし
PROXY_SERVER_BACKEND=proxy-server-backend
PROXY_SERVER_FRONTEND=proxy-server-frontend
PROXY_SERVER_PROXY=proxy-server-proxy

# コンテナ内でのサーバーポート
# compose.ymlをそのまま使っているなら変更なし
# laravel
API_FPM_PORT=9000
# react
WEB_WEB_PORT=5173
# backend
BACKEND_PROXY_PORT=80
# frontend
FRONTEND_PROXY_PORT=80
# proxy
# 内部からのアクセスなし
# postgres
DB_POSTGRES_PORT=5432


# コンテナ外でのアクセス可能ポート
# compose.ymlをそのまま使っているなら変更なし
# laravel
# 外部からのアクセスなし
# react
# 外部からのアクセスなし
# backend
# 外部からのアクセスなし
# frontend
# 外部からのアクセスなし
# proxy
EXPORT_PROXY_FRONT_PORT=80 #サブドメインなし
EXPORT_PROXY_FRONT_SSL_PORT=443 #サブドメインなし
EXPORT_PROXY_API_PORT=80 #api.
EXPORT_PROXY_API_SSL_PORT=443 #api.
# db
# 外部からのアクセスなし

